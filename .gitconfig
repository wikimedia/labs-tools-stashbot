# vim:sw=2 ts=2 sts=2 noet:
[core]
	editor = vim
	autocrlf = input

[color]
	ui = auto
[color "diff"]
	plain = normal
	meta = green
	frag = yellow
	old = magenta
	new = cyan
	commit = yellow
	whitespace = red reverse
[color "branch"]
	current = yellow
	local = normal
	remote = magenta
	plain = normal
[color "status"]
	header = green bold
	added = cyan
	updated = magenta
	changed = yellow
	untracked = white bold
	nobranch = red
[color "grep"]
	match = yellow

[diff]
	mnemonicprefix = true

[rerere]
	# Remember my merges
	# http://gitfu.wordpress.com/2008/04/20/git-rerere-rereremember-what-you-did-last-time/
	enabled = true

[format]
	pretty = oneline

[push]
	# Make "git push" or "git push <remote>" only push the current branch to
	# the tracked branch (regardless of its remote name) as opposed to pushing
	# all branches with a matching name on the remote. See "An asymmetry
	# between git pull and push": http://longair.net/blog/?p=572
	default = tracking

[alias]
	# add
	a = add

	# branches
	br = branch
	brs = branch --all

	# commit
	ci = commit
	cia = commit --all
	amend = commit --amend --all

	# checkout
	co = checkout

	# diff
	d = diff
	dc = diff --cached
	ds = diff --staged
	last = diff HEAD^
	wdiff = diff --word-diff=plain

	# empty tree sha1
	empty-tree-sha1 = hash-object -t tree /dev/null

	# fetch
	fetchall = fetch --verbose --prune --all

	# ignored files
	ignored = ls-files --others --ignored --exclude-standard

	# information
	info = remote --verbose show -n origin

	# log
	l = log --pretty=format:'%C(yellow)%h%C(reset) %s %C(bold green)(%C(reset)%C(green)%ar%C(reset)%C(bold green),%C(reset) %C(magenta)%an%C(reset)%C(bold green))%C(reset)%C(cyan)%d%C(reset)' --abbrev-commit --graph

	# status
	s = status --short --branch
	st = status

	# stash
	ss = stash
	sl = stash list
	sp = stash pop
	sa = stash apply
	sd = stash drop

	# tag
	t = tag -n --list   # show tags with first line of annotation
	push-for-review = push origin HEAD:refs/for/master

[help]
	autocorrect = 1
